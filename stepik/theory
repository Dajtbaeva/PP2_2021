Python Collections (Arrays)
There are four collection data types in the Python programming language:

List is a collection which is ordered and changeable. Allows duplicate members.
Tuple is a collection which is ordered and unchangeable. Allows duplicate members.
Set is a collection which is unordered, unchangeable*, and unindexed. No duplicate members.
Dictionary is a collection which is ordered** and changeable. No duplicate members.
from math import *
int()	- Округляет число в сторону нуля
round(x)	- Округляет число x до ближайшего целого. 
Если дробная часть числа равна 0.5, то число округляется до ближайшего четного числа.
round(x, n)	- Округляет число x до n знаков после точки
floor(x) - Округляет число x вниз («пол»)
ceil(x)	- Округляет число x вверх («потолок»)
abs(x) - Модуль числа x (абсолютная величина)

Корни, логарифмы, степени и факториал
sqrt(x)	- Квадратный корень числа x
pow(x, n) - Возведение числа x в степень n, x ** n
log(x)	- Натуральный логарифм числа x. Основание натурального логарифма равно числу e
log10(x) - Десятичный логарифм числа x. Основание десятичного логарифма равно числу 10
log(x, b) - Логарифм числа x по основанию b
factorial(n) - Факториал натурального числа n

Тригонометрия
degrees(x)	- Преобразует угол x, заданный в радианах, в градусы
radians(x)	- Преобразует угол x, заданный в градусах, в радианы
cos(x), sin(x), tan(x)
acos(x)	- Возвращает угол в радианах от 0 до pi, cos которого равен x
asin(x)	- Возвращает угол в радианах от - pi/2 do pi/2 sin которого равен x
atan(x)	- Возвращает угол в радианах от - pi/2 do pi/2 sin которого равен x
atan2(y, x)	- Полярный угол (в радианах) точки с координатами (x, y)

Список констант модуля math
pi, e
------------------------------------------------------------------------------------------------------
range(start, stop, step), start по-умолчанию равен 0, step по-умолчанию равен 1
если мы даем один аргумент, то это stop range(10) - от 0 до 9 (10 не включается)
если мы даём два аргумента, то это start и stop range(1, 6) - от 1 до 5
если мы даём три аргумента, то это start, stop, step range(2, 16, 2) - 2, 4, 6, 8, 10, 12, 14 
(не забываем что stop не включается)
step может быть отрицательным, но тогда start должен быть больше чем stop

--------------------------------------------------------------------------------------------

else if -> elif

есть готовые функции min(a, b, c) and max(a, b, c), sum(ints), it works even with string max(s)
s = input()
print('Максимальная цифра равна', max(s))
print('Минимальная цифра равна', min(s))

if a < n < b:
    print('YES')

u can use '' or "" with strings

True and False пишутся с заглавной буквы

a, y = 1, 0

without ; and {} in loops

without cnt++ -> cnt += 1

# comments

s = input()
print(s*4)

#include <cmath> -> from math import *

Как уже было сказано в предыдущем уроке существуют две основные разновидности цикла:
циклы, повторяющиеся определенное количество раз (for, счетные циклы, counting loops);
циклы, повторяющиеся до наступления определенного события (while, условные циклы, conditional loops)

while True:
    if условие 1:  # условие для остановки цикла
        break
    ...
    if условие 2:  # еще одно условие для остановки цикла
        break
    ...
    if условие 3:  # еще одно условие для остановки цикла
        break
В подобных случаях, когда существует множество причин завершения цикла, часто их проще 
выделить из нескольких разных мест, чем пытаться указать все условия завершения в заголовке цикла
-----------------------------------------------------------------------------------------
while условие:
    блок кода1
else:
    блок кода2

# или

for i in range(10):
    блок кода1
else:
    блок кода2
Блок кода2, указанный в else, будет выполнен, когда штатным образом завершается цикл while или for
Если слово else отсутствует в описании цикла, то блок кода2 будет выполняться после завершения цикла, 
несмотря ни на что. Если же слово else присутствует, то блок кода2 будет выполняться только в том случае, 
если цикл завершается штатным образом. Под штатным завершением цикла, подразумевается его завершение без 
использования оператора прерывания break.
--------------------------------------------------------------------------------------------
Обратите внимание: если длина строки s равна len(s), то при положительной нумерации слева направо, 
последний элемент имеет индекс равный len(s) - 1, а при отрицательной индексации справа налево, 
первый элемент имеет индекс равный -len(s).




